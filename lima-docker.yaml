# Based on: https://github.com/lima-vm/lima/blob/master/templates/docker.yaml
#
# See https://gist.github.com/akrylysov/7c1ea3bac409da2758e525f2f82e6373
# See https://github.com/lima-vm/lima/blob/master/docs/multi-arch.md#fast-mode-2-rosetta-intel-containers-on-arm-vm-on-arm-host
# See also https://github.com/lima-vm/lima/blob/master/docs/vmtype.md
message: |
  To run `docker` on the host (assumes docker-cli is installed), run the following commands:
  ------
  docker context create lima-{{.Name}} --docker "host=unix://{{.Dir}}/sock/docker.sock"
  docker context use lima-{{.Name}}
  docker run --rm hello-world
  ------

vmType: vz
rosetta:
  enabled: true
  binfmt: true

# Builtin default: 4
cpus: 6
# Builtin default: 4GiB
memory: 8GiB
# Builtin default: 100GiB
disk: 100GiB

images:
  # Try to use release-yyyyMMdd image if available. Note that release-yyyyMMdd will be removed after several months.
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release-20250115/ubuntu-24.04-server-cloudimg-amd64.img"
    arch: "x86_64"
    digest: "sha256:28d2f9df3ac0d24440eaf6998507df3405142cf94a55e1f90802c78e43d2d9df"
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release-20250115/ubuntu-24.04-server-cloudimg-arm64.img"
    arch: "aarch64"
    digest: "sha256:f11282a728ad42f8bfe0b646a6807674d79a019bfc229d80032345dd3228a2db"
  # Fallback to the latest release image.
  # Hint: run `limactl prune` to invalidate the cache
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-arm64.img"
    arch: "aarch64"

# virtiofs is the default for VZ, see https://lima-vm.io/docs/config/mount/
#mountType: virtiofs
mounts:
  # - location: "~"
  #   # CAUTION: `writable` SHOULD be false for the home directory.
  #   # Setting `writable` to true is possible, but untested and dangerous.
  #   # Builtin default: false
  #   writable: false
  - location: "~/dev"
    writable: true
  - location: "/tmp/lima"
    writable: true

networks:
# Simply does not work... Probably due to some firewall rules.
#  # The "vzNAT" IP address is accessible from the host, but not from other guests
#  - vzNAT: true

# containerd is managed by Docker, not by Lima, so the values are set to false here
containerd:
  system: false
  user: false

provision:
  - mode: system
    # This script defines the host.docker.internal hostname when hostResolver is disabled.
    # It is also needed for lima 0.8.2 and earlier, which does not support hostResolver.hosts.
    # Names defined in /etc/hosts inside the VM are not resolved inside containers when
    # using the hostResolver; use hostResolver.hosts instead (requires lima 0.8.3 or later).
    script: |
      #!/bin/sh
      sed -i 's/host.lima.internal.*/host.lima.internal host.docker.internal/' /etc/hosts
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      command -v docker >/dev/null 2>&1 && exit 0
      if [ ! -e /etc/systemd/system/docker.socket.d/override.conf ]; then
        mkdir -p /etc/systemd/system/docker.socket.d
        # Alternatively we could just add the user to the "docker" group, but that requires restarting the user session
        cat <<-EOF >/etc/systemd/system/docker.socket.d/override.conf
        [Socket]
        SocketUser={{.User}}
      EOF
      fi
      curl -fsSL https://get.docker.com | sh
probes:
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v docker >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "docker is not installed yet"
        exit 1
      fi
      if ! timeout 30s bash -c "until pgrep dockerd; do sleep 3; done"; then
        echo >&2 "dockerd is not running"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log". in the guest

hostResolver:
  # hostResolver.hosts requires lima 0.8.3 or later. Names defined here will also resolve inside
  # containers, and not just inside the VM itself.
  hosts:
    host.docker.internal: host.lima.internal

portForwards:
  - guestSocket: "/var/run/docker.sock"
    hostSocket: "{{.Dir}}/sock/docker.sock"
