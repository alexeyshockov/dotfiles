[user]
	name = Alexey Shokov
[init]
	defaultBranch = main
[core]
	ignorecase = false
	autocrlf = input
	whitespace = trailing-space, space-before-tab
	pager = delta
	fsyncMethod = batch

[color]
	ui = true
[diff]
    colorMoved = default
[delta]
    features = side-by-side line-numbers decorations
    syntax-theme = Monokai Extended
    plus-style = syntax "#003800"
    minus-style = syntax "#3f0001"

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-style = raw
    hunk-header-decoration-style = ul

[delta "line-numbers"]
    line-numbers-left-style = cyan
    line-numbers-right-style = cyan
    line-numbers-minus-style = 124
    line-numbers-plus-style = 28

[interactive]
    diffFilter = delta --color-only --features=interactive
[add.interactive]
    useBuiltin = false # (delta) required for git 2.37.0

[commit]
	verbose = true
[fetch]
	prune = true
[clean]
	requireForce = true
[branch]
	autoSetupRebase = always
[merge]
    conflictstyle = diff3
[rebase]
	autoSquash = true
	autoStash = true
[stash]
	showPatch = true
[tag]
	forceSignAnnotated = true
[rerere]
	enabled = true
[push]
	default = simple
	autoSetupRemote = true
[log]
	follow = true

[help]
	autoCorrect = 10
[apply]
	whitespace = fix

[github]
	user = alexeyshockov

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process

[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset' --date=relative
	v = log --pretty=format:'%cd%Cgreen%d %Cblue%h %Creset%s' --abbrev-commit --date=short -1
	st = status -sb
	s = status
	a = add -u
	c = "!git commit --date `gdate --utc +%Y-%m-%dT%H:%M:%S%z`"
	d = diff
	dc = diff --cached

	fa = fetch --all

	rs = restore --staged
	unstage = restore --staged

	standup = "!git log --since yesterday --author `git config user.email` --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset' --date=relative"
	overview = log --all --graph --simplify-by-decoration --decorate --pretty=format:'%cd%Cgreen%d %Cblue%h %Creset%s' --date=short

	ignored = ls-files --others -i --exclude-standard

	rewrite = "!sh -c 'git rebase -i HEAD~$1' -"

	# Use case: git push origin master && git push upstream master
	push-to-all = "!git push origin `git rev-parse --abbrev-ref HEAD` && git push upstream `git rev-parse --abbrev-ref HEAD`"

	# What will be received?
	in = "!git remote update -p; git log ..@{u}"
	# What will be sent?
	out = "log @{u}.."

	# Command clean-origin-branches is in ~/bin/git-clean-origin-branches file
	clean-branches = "!git branch --merged | grep -v '*' | xargs -n 1 -t git branch -d"

	please = push --force-with-lease
	ca = commit --amend --no-edit

[include]
	# Local overrides (work, etc.)
	path = ~/.gitconfig.local
